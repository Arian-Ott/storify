name: Python CI

on:
  push:
    paths:
      - '**.py'
      - 'pyproject.toml'
      - 'docker-compose.yml'
      - '.github/workflows/python-ci.yml'
  pull_request:
    paths:
      - '**.py'
      - 'pyproject.toml'
      - 'docker-compose.yml'

jobs:
  setup:
    name: Setup Environment
    runs-on: self-hosted

    outputs:
      python-version: ${{ steps.set-python-version.outputs.version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        run: |
          echo "Setting up Python environment"
          apt install python3.13-venv -y
          python3 -m venv .venv
          source .venv/bin/activate

      - name: Install dependencies
        run: |
          echo "Installing dependencies"
          python3 -m venv .venv
          source .venv/bin/activate
          python3 -m pip install --upgrade pip
          pip install .[dev]
      

  check:
    name: Format & Build Check
    runs-on: debian-bare
    needs: setup

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4



      - name: Run Ruff formatter
        run: |
          echo "Running Ruff formatter"
          python3 -m venv .venv
          source .venv/bin/activate
          pip install .[dev]
          ruff format .

      - name: Test Docker Compose Build
        run: docker compose build
      - name: Cleanup Docker
        run: docker system prune -f
      - name: cleanup python
        run: |
          deactivate
          rm -rf .venv
